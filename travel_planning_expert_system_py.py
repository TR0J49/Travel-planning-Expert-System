# -*- coding: utf-8 -*-
"""Travel planning Expert System.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VNw6q90LgfsrW_61OHyYovAdLSlq3gg4
"""

import random

class TravelPlanningAssistant:
    def __init__(self):
        self.destinations = {
            "Paris": {"budget": 100000, "activities": ["Eiffel Tower", "Louvre Museum", "Seine River Cruise"]},
            "Tokyo": {"budget": 120000, "activities": ["Tokyo Tower", "Akihabara", "Sumo Wrestling"]},
            "New York": {"budget": 150000, "activities": ["Times Square", "Central Park", "Statue of Liberty"]},
            "Delhi": {"budget": 8000, "activities": ["India Gate", "Qutub Minar", "Lotus Temple"]},
            "Jaipur": {"budget": 9000, "activities": ["Hawa Mahal", "Amber Fort", "City Palace"]},
            "Goa": {"budget": 11000, "activities": ["Beaches", "Dudhsagar Waterfalls", "Nightlife"]}
        }

    def get_user_preferences(self):
        print("Welcome to the Travel Planning Assistant!")
        while True:
            try:
                self.user_budget = float(input("Enter your budget for the trip: "))
                break
            except ValueError:
                print("Invalid input. Please enter a valid number.")

        self.user_interests = input("Enter your interests (comma-separated): ").split(',')

    def filter_destinations(self):
        valid_destinations = []
        for destination, details in self.destinations.items():
            if details["budget"] <= self.user_budget and any(activity in details["activities"] for activity in self.user_interests):
                valid_destinations.append(destination)
        return valid_destinations

    def recommend_destination(self, valid_destinations):
        if not valid_destinations:
            print("Sorry, no suitable destinations found. Adjust your preferences and try again.")
            return

        print("Recommended destinations:")
        for i, destination in enumerate(valid_destinations, start=1):
            print(f"{i}. {destination}")

        while True:
            try:
                selected_destination_index = int(input("Select a destination (enter the corresponding number): "))
                if 1 <= selected_destination_index <= len(valid_destinations):
                    break
                else:
                    print("Invalid input. Please enter a valid number.")
            except ValueError:
                print("Invalid input. Please enter a valid number.")

        selected_destination = valid_destinations[selected_destination_index - 1]
        print(f"Great choice! You're heading to {selected_destination}.")

    def plan_trip(self):
        self.get_user_preferences()
        valid_destinations = self.filter_destinations()
        self.recommend_destination(valid_destinations)

if __name__ == "__main__":
    travel_planner = TravelPlanningAssistant()
    travel_planner.plan_trip()